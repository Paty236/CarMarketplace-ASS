@using Application.DTOs
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using CarMarketplace.Presentation.Services.UserAccountServices
@using MudBlazor

@inherits LayoutComponentBase

@inject IUserAccountService userService
@inject NavigationManager navigationManager
@inject CurrentUserDto currentUser

<MudThemeProvider @bind-IsDarkMode="@_isDarkTheme"
                  Theme="_theme" />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.Medium"
                   CloseButton="true"
                   DisableBackdropClick="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            </NotAuthorized>
        </AuthorizeView>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudToggleIconButton Toggled="@_isDarkTheme" ToggledChanged=@OnToggledChangedAsync
                                     Title="Switch to Dark Theme" Icon=@Icons.Material.Outlined.DarkMode Color=@Color.Inherit
                                     ToggledTitle="Switch to Light Theme" ToggledIcon=@Icons.Material.Filled.WbSunny ToggledColor=@Color.Default />
                <MudButton StartIcon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="LogOut">LogOut</MudButton>
                <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="DrawerVariant.Responsive">
                    <NavMenu />
                </MudDrawer>
            </Authorized>
            <NotAuthorized>
                <MudToggleIconButton Toggled="@_isDarkTheme" ToggledChanged=@OnToggledChangedAsync
                                     Title="Switch to Dark Theme" Icon=@Icons.Material.Outlined.DarkMode Color=@Color.Inherit
                                     ToggledTitle="Switch to Light Theme" ToggledIcon=@Icons.Material.Filled.WbSunny ToggledColor=@Color.Default />
                <MudButton StartIcon="@Icons.Material.Filled.Login" Href="login" Color="Color.Inherit">Login</MudButton>
                <MudButton StartIcon="@Icons.Material.Filled.PersonAdd" Href="register" Color="Color.Inherit">Register</MudButton>
                <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="DrawerVariant.Responsive">
                    <NavMenu />
                </MudDrawer>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    bool _isDarkTheme = false;

    const string PrefersDarkThemeKey = "prefers-dark-scheme";

    void OnToggledChangedAsync() => _isDarkTheme = !_isDarkTheme;

    readonly MudTheme _theme = new()
        {
            Palette = new Palette()
            {
                Tertiary = "#7e6fff",
                DrawerIcon = "#aaa9b9",
                DrawerText = "#aaa9b9",
                DrawerBackground = "#303030"
            },
            PaletteDark = new Palette()
            {
                Primary = "#7e6fff",
                Tertiary = "#7e6fff",
                Surface = "#1e1e2d",
                Background = "#1a1a27",
                BackgroundGrey = "#151521",
                AppbarText = "#92929f",
                AppbarBackground = "rgba(26,26,39,0.8)",
                DrawerBackground = "#1a1a27",
                ActionDefault = "#74718e",
                ActionDisabled = "#9999994d",
                ActionDisabledBackground = "#605f6d4d",
                TextPrimary = "#b2b0bf",
                TextSecondary = "#92929f",
                TextDisabled = "#ffffff33",
                DrawerIcon = "#92929f",
                DrawerText = "#92929f",
                GrayLight = "#2a2833",
                GrayLighter = "#1e1e2d",
                Info = "#4a86ff",
                Success = "#3dcb6c",
                Warning = "#ffb545",
                Error = "#ff3f5f",
                LinesDefault = "#33323e",
                TableLines = "#33323e",
                Divider = "#292838",
                OverlayLight = "#1e1e2d80"
            },
        };

    void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private async Task LogOut()
    {
        await userService.Logout();
        navigationManager.NavigateTo("/login", true);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        if (!currentUser.IsAuthenticated)
            navigationManager.NavigateTo("/");

        StateHasChanged();
    }
}
